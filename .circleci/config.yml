---
version: 2

jobs:
  build:
    docker:
      - image: circleci/clojure:latest
    environment:
      _JAVA_OPTIONS: "-Xms1024m -Xmx3072m"
    steps:
      - checkout
      - &restore-cache
        restore_cache:
          keys:
            - libs-cache-{{ checksum "project.clj" }}-{{ checksum ".circleci/config.yml" }}
            - libs-cache-{{ checksum "project.clj" }}
            - libs-cache-

      - run:
          command: wget http://packages.confluent.io/archive/4.0/confluent-oss-4.0.0-2.11.tar.gz; tar xzf confluent-oss-4.0.0-2.11.tar.gz; sudo mv confluent-4.0.0 /usr/local/
      - run:
          command: echo 'export PATH=/usr/local/confluent-4.0.0/bin:$PATH' >> $BASH_ENV
      - run:
          command: confluent start
      - run:
          command: lein modules do with-profile +dev,+test deps, install
      - run:
          command: confluent status
      - save_cache:
          key: libs-cache-{{ checksum "project.clj" }}-{{ checksum ".circleci/config.yml" }}
          paths:
            - ~/.m2/
      - run:
          command: lein modules test
  deploy-staging:
    docker:
      - image: circleci/clojure:latest
    environment:
      GIT_AUTHOR_NAME: CircleCI
      GIT_AUTHOR_EMAIL: circleci@circleci.com

    steps:
      - checkout
      - *restore-cache
      - run:
          command: git config --global user.name $GIT_AUTHOR_NAME
      - run:
          command: git config --global user.email $GIT_AUTHOR_EMAIL
      - run:
          command: lein deploy snapshots
  deploy-release:
    docker:
      - image: circleci/clojure:latest
    environment:
      GIT_AUTHOR_NAME: CircleCI
      GIT_AUTHOR_EMAIL: circleci@circleci.com

    steps:
      - checkout
      - *restore-cache
      - run:
        command: git config --global user.name $GIT_AUTHOR_NAME
      - run:
        command: git config --global user.email $GIT_AUTHOR_EMAIL
      - run:
        command: lein deploy

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build
      - deploy-staging:
          requires:
            - build
          filters:
            branches:
              ignore: master
      - deploy-release:
          requires:
            - build
          filters:
            branches:
              only: master
